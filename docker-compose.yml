version: "3.9"
services:
  kong:
    container_name: kong
    image: kong:2.8
    restart: unless-stopped
    ports:
      - ${KONG_HTTP_PORT}:8000/tcp
      - ${KONG_HTTPS_PORT}:8443/tcp
      - ${KONG_ADMIN_HTTP_PORT}:8001/tcp
      - ${KONG_ADMIN_HTTPS_PORT}:8444/tcp
    volumes:
      - ./.volumes/kong/kong.yml:/usr/local/kong/declarative/kong.yml
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_PLUGINS: cors,jwt,prometheus
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
  auth:
    container_name: gotrue
    build: https://github.com/netlify/gotrue.git#v1.0.1
    depends_on:
      - db
    restart: unless-stopped
    environment:
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 8081
      GOTRUE_OPERATOR_TOKEN: ${GOTRUE_OPERATOR_TOKEN}

      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?sslmode=disable&search_path=auth

      GOTRUE_SITE_URL: ${GOTRUE_SITE_URL}
      GOTRUE_DISABLE_SIGNUP: ${GOTRUE_DISABLE_SIGNUP}

      GOTRUE_JWT_SECRET: ${GOTRUE_JWT_SECRET}
      GOTRUE_JWT_EXP: ${GOTRUE_JWT_EXP}
      GOTRUE_JWT_AUD: ${GOTRUE_JWT_AUD}
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated # The default group to assign all new users to.

      GOTRUE_EXTERNAL_GOOGLE_ENABLED: ${GOTRUE_EXTERNAL_GOOGLE_ENABLED}
      GOTRUE_EXTERNAL_GOOGLE_CLIENT_ID: ${GOTRUE_EXTERNAL_GOOGLE_CLIENT_ID}
      GOTRUE_EXTERNAL_GOOGLE_SECRET: ${GOTRUE_EXTERNAL_GOOGLE_SECRET}
      GOTRUE_EXTERNAL_GOOGLE_REDIRECT_URI: ${GOTRUE_EXTERNAL_GOOGLE_REDIRECT_URI}

      GOTRUE_MAILER_AUTOCONFIRM: ${GOTRUE_MAILER_AUTOCONFIRM}
      GOTRUE_SMTP_ADMIN_EMAIL: ${GOTRUE_SMTP_ADMIN_EMAIL}
      GOTRUE_SMTP_HOST: ${GOTRUE_SMTP_HOST}
      GOTRUE_SMTP_PORT: ${GOTRUE_SMTP_PORT}
      GOTRUE_SMTP_USER: ${GOTRUE_SMTP_USER}
      GOTRUE_SMTP_PASS: ${GOTRUE_SMTP_PASS}
  main:
    image: vietlach-backend:0.0.1
    build: ../vietlach-backend
    restart: unless-stopped
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_NAME: ${POSTGRES_DB}
      DB_USER: postgres
      DB_PASSWORD: ${POSTGRES_PASSWORD}
  db:
    container_name: postgres
    image: postgres:14
    restart: unless-stopped
    volumes:
      - ./.volumes/postgres/data:/var/lib/postgresql/data
      - ./.volumes/postgres/init:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
